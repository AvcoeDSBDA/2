Angular Js
App/pages/
layout/

layout.component.html
<form class="d">
<h5><b style="color: green;">User name :
</b>{{loggedUser?.name}}</h5>&nbsp;&nbsp;&nbsp;&nbsp;
<h5><b style="color: green;">User email :
</b>{{loggedUser?.email}}</h5>&nbsp;&nbsp;&nbsp;&nbsp;<br>
<button class="btn btn-primary" type="button" (click)="onLogoff()">Log out</button>
</form>
<router-outlet></router-outlet>

layout.component.css
.d{
margin-top: 10%;
width: 100%;
text-align: center;
}

layout.component.spec.ts
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { LayoutComponent } from './layout.component';

describe('LayoutComponent', () => {
let component: LayoutComponent;
let fixture: ComponentFixture<LayoutComponent>;

beforeEach(async () => {
await TestBed.configureTestingModule({
declarations: [LayoutComponent]
})
.compileComponents();

fixture = TestBed.createComponent(LayoutComponent);
component = fixture.componentInstance;
fixture.detectChanges();
});

it('should create', () => {
expect(component).toBeTruthy();
});
});

layout.component.ts
import { Component } from '@angular/core';
import { Router } from '@angular/router';

@Component({
selector: 'app-layout',
templateUrl: './layout.component.html',
styleUrl: './layout.component.css'
})
export class LayoutComponent {

loggedUser: any;

constructor(private router: Router) {
const localUser = localStorage.getItem('loggedUser');
if(localUser != null) {
this.loggedUser = JSON.parse(localUser);
}
}

onLogoff() {
localStorage.removeItem('loggedUser');
this.router.navigateByUrl('/login')
}
}

loginsignup/
login.component.html
<div class="parent">
<div class="container" [ngClass]="isSignDivVisiable ? 'active' :'' " id="container">
<div class="form-container sign-up" >
<form>
<h1>Create Account</h1>
<span>or use your email for registeration</span><br><br>
<input type="text" name="name" [(ngModel)]="signUpObj.name"
placeholder="Name"><br><br>
<input type="email" name="email" [(ngModel)]="signUpObj.email"
placeholder="Email"><br><br>
<input type="password" name="password" [(ngModel)]="signUpObj.password"
placeholder="Password"><br><br>
<button (click)="onRegister()">Sign Up</button>
</form>
</div><br><br><br><br><br>
<div class="form-container sign-in" >

<form>
<h1>Sign In</h1>
<span>or use your email password</span><br><br>
<input type="email" name="email" [(ngModel)]="loginObj.email"
placeholder="Email"><br><br>
<input type="password" name="password" [(ngModel)]="loginObj.password"
placeholder="Password"><br><br>
<button (click)="onLogin()">Sign In</button>
<a href="#" style="padding: 10px;">Forget Your Password?</a>
</form>
</div><br><br><br><br>
</div>
</div>

login.component.css
.sign-in{
padding: 100px;
margin-top: 20%;
margin-left: 20px;
background: whitesmoke;
filter: drop-shadow(2,2,2,black);
}
.sign-up{
padding: 100px;
margin-top: 20%;
margin-right: 20px;
background: whitesmoke;
filter: drop-shadow(2,2,2,black);
}
input{

border: 1px solid black;
border-radius: 5px;
padding: 10px;
}
h1{
width: 100px;
}

login.component.spec.ts
import { ComponentFixture, TestBed } from '@angular/core/testing';
import { LoginComponent } from './login.component';
describe('LoginComponent', () => {
let component: LoginComponent;
let fixture: ComponentFixture<LoginComponent>;

beforeEach(async () => {
await TestBed.configureTestingModule({
declarations: [LoginComponent]
})
.compileComponents();

fixture = TestBed.createComponent(LoginComponent);
component = fixture.componentInstance;
fixture.detectChanges();
});

it('should create', () => {
expect(component).toBeTruthy();
});
});

login.component.ts
import { Component } from '@angular/core';
import { Router } from '@angular/router';

@Component({
selector: 'app-login',
templateUrl: './login.component.html',
styleUrl: './login.component.css'
})
export class LoginComponent {
isSignDivVisiable: boolean = true;
signUpObj: SignUpModel = new SignUpModel();
loginObj: LoginModel = new LoginModel();
constructor(private router: Router){}
onRegister() {
debugger;
const localUser = localStorage.getItem('angular17users');
if(localUser != null) {
const users = JSON.parse(localUser);
users.push(this.signUpObj);
localStorage.setItem('angular17users', JSON.stringify(users))
} else {
const users = [];
users.push(this.signUpObj);
localStorage.setItem('angular17users', JSON.stringify(users))
}
alert('Registration Success')
}
onLogin() {

debugger;
const localUsers = localStorage.getItem('angular17users');
if(localUsers != null) {
const users = JSON.parse(localUsers)
const isUserPresent = users.find( (user:SignUpModel)=> user.email ==
this.loginObj.email && user.password == this.loginObj.password);
if(isUserPresent != undefined) {
alert("User Found...");
localStorage.setItem('loggedUser', JSON.stringify(isUserPresent));
this.router.navigateByUrl('/dashboard');
} else {
alert("No User Found")
}
}
}
}
export class SignUpModel {
name: string;
email: string;
password: string;
constructor() {
this.email = "";
this.name = "";
this.password= ""
}
}
export class LoginModel {
email: string;
password: string;
constructor() {

this.email = "";
this.password= ""
}
}

App/
app.module.ts
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { LoginComponent } from './pages/login/login.component';
import { LayoutComponent } from './pages/layout/layout.component';
import { FormsModule } from '@angular/forms';

@NgModule({
declarations: [
AppComponent,
LoginComponent,
LayoutComponent,
],
imports: [
BrowserModule,
AppRoutingModule,
FormsModule
],
providers: [],
bootstrap: [AppComponent]
})
export class AppModule { }

app.component.html
<router-outlet></router-outlet>

app-routing.module.ts
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { LoginComponent } from './pages/login/login.component';
import { LayoutComponent } from './pages/layout/layout.component';

const routes: Routes = [
{
path:'',
redirectTo : 'login',
pathMatch:'full'
},
{
path:'login',
component: LoginComponent
},
{
path:'',
component: LayoutComponent,
}
];
@NgModule({
imports: [RouterModule.forRoot(routes)],
exports: [RouterModule]
})
export class AppRoutingModule { }

